<?php
namespace app\index\controller;
use think\Controller;
use think\Cookie;
use think\image\Exception;
use Nocache\mcache;
use think\Log;

class Index extends Controller
{
    public $memcache = null;
    /**
     * RSA私钥
     * 不能换换
     * @var string
     */
    public $private_key =  '-----BEGIN PRIVATE KEY-----
MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBALvDe77nbuXSb+Rv
oBPjrPEstCtCk9gOzjDCg1PfYcB/AwLZHWaeOMFxHvkzlckb8LAQOCy0o5F6WyzI
NaWnOQyFWh/hORTvRSBEA2e6cZYxyVWMZUgJy58Izl0yoFewF2/Af+SJrmb/tdI+
1JRu+1QxMe7NHoGp2uY5LnCpwNn1AgMBAAECgYBGeG74TnpDzYBrVy3YaSoedm3E
kr9UZvIiQM7zarKQgdsKdZxgSF/60k8Srra3/UGPgvbiaIW/cxHHM/lWi/WPxVy9
jKalDUEKIdBiQAquR2alzEfLxvtGN/oiqf8bo2CzVuY0bGaWMaYBkcMp3TO8eJ7X
m94KOeDS79k5ItXG/QJBAO2xdLhKXXd6knyTcRgr2qPkRHvCjWuTXiRdI/tv4E2u
a4KRY7rNeguQQnmG7/jIlEGNJDJVLg/+Uh9lKeICTlMCQQDKOZOyWs3zJKkJ3WPb
6U7qxkdE+F0QnG0cw/VoVlK+dqSukb7nriPPhQpNyH/qjQe5p8QCVkcvdmLyvrkh
Pd2XAkEAyIwEPgXIjKlndSJ1tn4x0DwlqAIDjjNdp/LKDDhdmU1DuntvGMqLYbxK
yfyW9mJN7GzokGscHTRoF8MkLmPhrwJBALyMnJJSKe5HQzjIbCAR05wBDVhYPeWM
BAwrBXin6/RcCMYfbCD187u8btQBWoslvYszygTnzu2I808j1tcQqLcCQB4Rd2jt
AveNzk3hlrI+n7brJKVp7ENGq91qCxZRCXyKqsz+vNqA8nbu8166YD+yuAVVZ0Xn
edeTKZWCUDdjEUc=
-----END PRIVATE KEY-----';
    /**
     * RSA公钥
     * @var string
     */
    public $public_key ='-----BEGIN PUBLIC KEY-----
MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC7w3u+527l0m/kb6AT46zxLLQr
QpPYDs4wwoNT32HAfwMC2R1mnjjBcR75M5XJG/CwEDgstKORelssyDWlpzkMhVof
4TkU70UgRANnunGWMclVjGVICcufCM5dMqBXsBdvwH/kia5m/7XSPtSUbvtUMTHu
zR6BqdrmOS5wqcDZ9QIDAQAB
-----END PUBLIC KEY-----';
    /**
     *内部测试私钥
     * @var string
     */
    public $encrype_key = 'llFG8LMBHHGDuaEmqJ12a88Jlm9pD8p4FF5umFE4C7JHK21u6FuGB7qaq9GGh2v837FqNHaFDAN4FBph976g5qGa8NEDMuNE4al3H8Mp9EAL65hA2hpaEh9H';

    /**
     * 获取公钥返回资源id
     */
    public function getRSA_pubId(){
        $pu_key = openssl_pkey_get_public($this->public_key);//这个函数可用来判断公钥是否是可用的
        return $pu_key;
    }
    /**
     * 获取私钥返回资源id
     */
    public function getRSA_priId(){
        $pi_key = openssl_pkey_get_private($this->private_key);//这个函数可用来判断私钥是否是可用的，可用返回资源id Resource id
        return $pi_key;
    }
    /**
     * 公钥加密
     * @param $data
     * @param $pu_key
     * @return string
     */
    public function public_encrypt($data){
        $pu_key = $this->getRSA_pubId();
        openssl_public_encrypt($data,$encrypted,$pu_key);//公钥加密
        $encrypted = base64_encode($encrypted);
        return  $encrypted;
    }

    /**私钥加密
     * @param $encrypted
     * @param $pi_key
     * @return mixed
     */
    public function private_decrypt($encrypted){
        $pi_key = $this->getRSA_priId();
        openssl_private_decrypt(base64_decode($encrypted),$decrypted,$pi_key);//私钥解密
        return $decrypted;
    }

    /**
     * SHA1加密 (
     * (u+si+ut+p+it+ts+内部测试私钥内部测试私钥)
     * @param $data
     */
    public function getSha1($u,$si,$ut,$p,$it,$ts){
        $key = sha1($u.$si.$ut.$p.$it.$ts.$this->encrype_key);
        return $key;
    }
    public static $error_code = [
        '10011100' => '非法域名！禁止访问',
        '10011000' => '用户层次有误',
        '10011001'=> '用户token不对',
        '10011022' => '此验证请求已经过期！',
        '10011002' => '用户参数有误',
        '10011003' => 'token不可以再次使用',
        '10011009' => '加密参数不对',
        '10011007' => '验证参数不对',
        '10011004'=>'商户网站不对',
        '10011005'=>'用户类型不对',
        '10011006'=>'盘口信息不对',
        '10011010'=>'商户不存在或者已被冻结',
        '10011011'=>'彩种ID 有误！',
        '10011012'=>'不存在该彩种！',
        '10011013'=>'请求参数异常！！',
        '10011014'=>'session 有误！！',
    ];
    public function _initialize()
    {
        $this->memcache = new mcache();
        parent::_initialize(); // TODO: Change the autogenerated stub
    }
//718ec2893686350069178514199acf1feae0b033
//67cf5dbca1255277dfbca3e21b241ec171b93e37
    /**
     * 用户登录接口
     * @return mixed|void
     */
    public function index()
    {
        $server = $this->request->server();
        $logs = [
            'u_id'  => '',
            'u_username'   => '',
            'u_control'    => '',
            'u_action'     => '',
            'u_is_success' => '',
            'u_remark'     => '',
            'u_client_ip'  => $server['REMOTE_ADDR'],
            'u_proxy_ip'   => $server['SERVER_ADDR'],
            'u_domain'     => $server['HTTP_HOST'],
        ];

        try{
            $post = $this->request->post();
            if(empty($post)){
                throw new Exception(self::$error_code['10011013'],'10011013');
            }
            $arr1 = json_decode($this->private_decrypt($post['param']),true);
            if(empty($arr1)){
                throw new Exception(self::$error_code['10011007'],'10011007');
            }
            if(empty($arr1['ut'])){
                throw new Exception('ut参数不能为空！','10011101');
            }
            if(empty($arr1['p'])){
                throw new Exception('参数p不能为空！','10011102');
            }
            $arr1['it'] = $arr1['it'] == 0?0:$arr1['it'];
            if(empty($arr1['ts'])){
                throw new Exception('参数ts不能为空！','10011104');
            }
            if(empty($arr1['u'])){
                throw new Exception('参数u不能为空！','10011105');
            }
            if(empty($arr1['si'])){
                throw new Exception('参数si不能为空！','10011106');
            }
            $encrypt = $this->getSha1($arr1['u'],$arr1['si'],$arr1['ut'],$arr1['p'],$arr1['it'],$arr1['ts']);
            if(strtoupper($encrypt) !=  strtoupper($post['encrypt'])){
                throw new Exception(self::$error_code['10011009'].$encrypt,'10011009');
            }
            $data['dcUserTree'] = $arr1['ut'];
            $data['lid'] = empty($post['lid'])?2:$post['lid'];
            $data['dcCustomerId'] = 'admin';
            $data['odds'] = $arr1['p'];
            $data['dcUserType'] = $arr1['it'] == 0?2:3;
            $data['dcToken'] = $arr1['ts'];
            $data['dcUsername'] = $arr1['u'];
            $data['dcSiteId'] = $arr1['si'];
            if(empty($post['clientType'])){  //后台登录
                //加域名限制
                $forward = 'admin/index/login';
            }else{
                $data['clientType'] = empty($post['clientType'])?'pc':$post['clientType'];
                switch ($data['clientType']){
                    case 'pc':
                        $logs['u_control'] = 'pc';
                        $logs['u_action'] = 'Login';
                        $this->login($data);
                        $forward = 'pc/game/play';
                        break;
                    case 'wap':
                        $logs['u_control'] = 'mobile';
                        $logs['u_action'] = 'Login';
                        $this->login($data);
                        $forward = 'mobile/game/play';
                        break;
                    default :
                        throw new Exception(self::$error_code['10011100'],'10011100');
                }
            }
            $userInfo = session('user');
            $logs['u_id'] = empty($userInfo['u_id'])?'':$userInfo['u_id'];
            $logs['u_username'] = $userInfo['u_username'];
            $logs['u_is_success'] = 1;
            $logs['u_remark'] = '登录成功!';
            //登录成功！
            addLogs($logs);
        }catch (Exception $e){
            $logs['u_username'] = empty($data['dcUsername'])?'':$data['dcUsername'];
            $logs['u_is_success'] = 0;
            $data['dcSiteId'] = empty($data['dcSiteId'])?'': $data['dcSiteId'];
            $logs['u_remark'] = 'siteId为'. $data['dcSiteId'].'的用户'.$e->getMessage();
            //登录失败
            addLogs($logs);
            $this->assign('data',$e->getMessage());
            return  $this->fetch("./message");
        }
        return  $this->redirect($forward);
    }

    /**
     * 前端部分登录验证
     * 用户登录
     *  dcUserTree 层级  股东,总代,代理
     *  dcCustomerId 总公司 u_username
     *  dcSiteId 分公司u_username
     *  dcUserType 用户类型 2正式   3测试
     *  odds 盘口 a b c d
     *  dcToken time()
     *  dcUsername  用户名
     *  dcEncrypt 加密串
     *
     * lid
     * 2  重庆时时彩
    26 山东11选5
    8  新疆时时彩
    27 江西11选5
    24 广东11选5
    14 天津时时彩
    28 福彩3D
    29 排列三/五
    9  江苏快三
    30 湖北快3
    6  北京赛车
     */
    public function login($data = []){
        $arr =[];
        $lids =[2,26,8,27,24,14,28,29,9,30,6];
        if(empty($data['lid'])){
            throw new Exception(self::$error_code['10011011'],'10011011');
        }
        if(!in_array($data['lid'],$lids)){
            throw new Exception(self::$error_code['10011012'],'10011012');
        }
        if (empty($data['dcUserTree'])||count(explode(',',$data['dcUserTree']))!=3) {
            throw new Exception(self::$error_code['10011000'],'10011000');
        }
        $dcCustomer = json_decode(forwarding('UserForwarding', '\app\Service\users\business\frontUsers', 'getUserByUsername', ['username' => $data['dcCustomerId']]),true);
        if(empty($dcCustomer['data'])){
            throw new Exception(self::$error_code['10011000'],'10011000');
        }
        $arr['dcCustomerId'] = $data['dcCustomerId'];
        $arr['top5_id'] = $dcCustomer['data']['u_id'];
        $arr['dcUserTree'] = $data['dcUserTree'];
        if(empty($data['dcUserType'])||(!in_array($data['dcUserType'],[2,3]))){
            throw new Exception(self::$error_code['10011005'],'10011005');
        }
        $arr['dcUserType'] = $data['dcUserType'];
        $adds = ['a','b','c','d'];
        if(!in_array(strtolower($data['odds']),$adds)){
            throw new Exception(self::$error_code['10011006'],'10011006');
        }
        $arr['odd'] = $data['odds'];
        if(empty($data['dcToken'])){
            throw new Exception(self::$error_code['10011001'],'10011001');
        }
        if((time() - $data['dcToken']) > DS_TOKEN_LIVE){
            throw new Exception(self::$error_code['10011022'],'10011022');
        }
        $arr['dcToken'] = $data['dcToken'];
        if(empty($data['dcUsername'])){
            throw new Exception(self::$error_code['10011002'],'10011002');
        }
        $arr['dcUsername'] = $data['dcUsername'];
        if ($this->memcache->get('dcToken' , $data['dcUsername'].$data['dcToken'])) {
            throw new Exception(self::$error_code['10011003'],'10011003');
        }
        $this->memcache->set('dcToken' , $data['dcUsername'].$data['dcToken'],$data['dcToken']);
        if(empty($data['dcSiteId'])&&!is_numeric($data['dcSiteId'])){
            throw new Exception(self::$error_code['10011004'],'10011004');
        }
        $arr['dcSiteId'] = $data['dcSiteId'];
        $arr['ip'] = $this->request->ip();
        $res = json_decode(forwarding('UserForwarding', '\app\Service\users\business\frontUsers', 'frontAccessUser',$arr),true);
        if($res['data']){//登陆成功
            $server = $this->request->server();
            //把用户信息存储起来
            //1.添加信息到session 表并保存信息到memcache
            $user = $res['data'];
            $session['s_username'] = $user['u_username'];
            $session['s_pan'] = $arr['odd'];
            $session['s_top4'] = $user['u_top_4'];
            $session['s_top3'] = $user['u_top_3'];
            $session['s_top2'] = $user['u_top_2'];
            $session['s_top1'] = $user['u_top_1'];
            $session['s_login_time'] = date("Y-m-d H:i:s");
            $session['s_update_time'] = date("Y-m-d H:i:s");
            $session['s_client_ip'] = $server['REMOTE_ADDR'];
            $session['s_server_ip'] = $server['SERVER_ADDR'];
            $session_status = json_decode(forwarding('UserForwarding', '\app\Service\users\business\sessions', 'addFrontSession',$session),true);
            if(!$session_status['data']){
                throw new Exception($res['message'],$res['error_code']);
            }
            //memcahce 里面保存三分钟
            $session['s_id'] = $session_status['data'];
            if(empty($res['data']['u_id'])){//新增的没有用户ID 查一遍
                $info = json_decode(forwarding('lotteryForwarding', '\app\Service\users\business\frontUsers', 'getUseInfo', ['username'=>$res['data']['u_username']]),true);
                $res['data'] = $info['data'];
            }
            $userInfo = [
                'u' => $res['data']['u_username'],
                'o' => strtolower($arr['odd']),
                'ip' => $server['REMOTE_ADDR'],
                't'=>$res['data']['u_is_test'],
                'lt' => strtotime($session['s_login_time']),
                'ut' => strtotime($session['s_update_time']),
                's' =>  $res['data']['u_site_id'],
                'sd' => $session['s_id'],
                'user' =>  $res['data'],
            ];
            $primaryKey = json_encode($userInfo);
            $encrypt = json_decode(forwarding('dsForwarding', '\app\Service\DS\business\encrypt', 'Xencrypt', ['key'=>base64_encode($primaryKey)]),true);//加密
            Cookie::set('primaryKey',urlencode($encrypt['data']));
            Cookie::set('lid',$data['lid']);
            $res['data']['o_adds'] = $userInfo['o'];
            return $res['data'];
        }else{
            throw new Exception($res['message'],$res['error_code']);
        }

    }
    public function test(){
        echo 'test';
    }

}