<?php
/**
 * Created by PhpStorm.
 * User: Jim FAN
 * Date: 2017/6/17
 * Time: 16:00
 */

namespace app\pc\controller;
use think\Cookie;
use app\pc\controller\Base;
use think\Log;

class Game extends Base
{
    public $lotteryTypes = array(
        '1' => '时时彩',
        '2' => '11选5',
        '4' => '福彩3D',
        '6' => '快3',
        '7' => '快乐扑克',
        '8' => 'PK10',
        '9' => '海南七星彩',
        '10' => '香港六合彩',
        '11' => '快乐十分',
    );

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 缓存样式
     * @return int
     */
    public function skinSave()
    {
        $user = $this->user;
        $skin2 = $this->request->post('skin');
        $skin = empty($skin2) ? 'black' : $skin2;
        $this->memcache->set('user', 'skin' . $user['u_username'], $skin, 60 * 60 * 12);
        return 1;
    }

    /**
     * 缓存排序
     */
    public function sortLotterysSave()
    {
        $user = $this->user;
        $sortLotterys = $_POST['sortLotterys'];
        $this->memcache->set('user', 'sortLotterys' . $user['u_username'], $sortLotterys, 60 * 60 * 12);
        return 1;
    }

    /**
     * 奖金规则
     */
    public function prizeDetail(){
        $user = $this->user;
        //判断站点运营状态
        $is_run = $this->is_run();
        if($is_run['status']){
            $this->assign('message',$is_run['message'] );
            return $this->fetch('./message');
        }
        if (empty($user)) {
            $this->assign('url', '');
            $this->assign('message', "用户已经退出，请进入平台重新登录！");
            return $this->fetch('./message');
        }
        $lid = $this->request->get('lottery_id');
        $lidName = $this->checkLotteryId($lid);
        if(!$lidName){
            $this->assign('url', '');
            $this->assign('message', "不存在该彩种!");
            return $this->fetch('./message');
        }
        //3.得到所有玩组法列表及玩法列表和奖金列表
//        $mgs = $this->memcache->get('user', 'mgs' . $user['u_username'] . $lid);
        if (empty($mgs)) {
            $mgs = forwarding('lotteryForwarding', '\app\Service\lottery\business\method_groups', 'getMethodGroupsByLid', ['lid' => $lid,'odd'=>strtolower($user['o_adds'])]);
            $this->memcache->set('user', 'mgs' . $user['u_username'] . $lid, $mgs, 30);
        }
        $mgs =  json_decode($mgs,true);
        $this->assign('list',$mgs);
        $this->assign('lidName',$lidName);
        return  $this->fetch('./prizeDetail');
    }

    /**
     * 投注页面
     */
    public function Play($lid = 2)
    {
        $slid =  Cookie::get('lid');
        if(!empty($slid)){
            $lid = $slid;
            Cookie::delete('lid');
        }
        $user = $this->user;
        if (empty($user)) {
            $this->assign('url', '');
            $this->assign('message', "用户已经退出，请进入平台重新登录！");
            return $this->fetch('./message');
        }
        //判断站点运营状态
        $is_run = $this->is_run();
        if($is_run['status']){
            $this->assign('message',$is_run['message'] );
            return $this->fetch('./message');
        }
        $this->assign('is_test',$user['u_is_test']);//判断试玩账号不能追号
        $username = unwrapUsername($user['u_username']);
        $this->assign('username',$username);
        //验证彩种id
        $lid = $this->checkLotteryId($lid) ? $lid : 2;
        //默认皮肤缓存
        $skin2 = $this->memcache->get('user', 'skin' . $user['u_username']);
        $skin = empty($skin2) ? "black" : $skin2;
        $this->assign('skin', $skin);
        $data = [];
        //1.获取所有彩种
        $lot_lis = $this->memcache->get('user', 'lottery' . $user['u_username'] . $lid);
        if (empty($lot_lis)) {
            $res = json_decode(forwarding('lotteryForwarding', '\app\Service\lottery\business\lottery', 'getLot', $data), true);
            $lot_lis = $res['data'];
            $this->memcache->set('user', 'lottery' . $user['u_username'] . $lid, $lot_lis, 2);
        }
        $stopLid = $this->memcache->get('user', 'stopLid');
        if(empty($stopLid)){
            $lids = array_keys($lot_lis);
            $conf = json_decode(forwarding('lotteryForwarding', '\app\Service\lottery\business\config', 'getLidStatusList', ['lids'=>$lids]), true);
            $stopLid = $conf['data'];
            $this->memcache->set('user', 'stopLid',$stopLid,1);//默认一分钟
        }
        if(!empty($stopLid)){
            foreach ($stopLid as $v){
                unset($lot_lis[$v]);
            }
        }
        $sortLotterys = $this->memcache->get('user', 'sortLotterys' . $user['u_username']);
        if (empty($sortLotterys)) {
            foreach ($lot_lis as $v) {
                $sortLotterys[] = array(
                    'lotteryId' => $v['lid'],
                    'name' => $v['name'],
                    'cname' => $v['cname'],
                    'alink' => url('Game/play'),
                    'isopened' => 1);
            }
            $this->memcache->set('user', 'sortLotterys' . $user['u_username'], $sortLotterys, 60);
        }
        $this->assign('sortLotterys', json_encode($sortLotterys));
        //2.处理彩种     
        if( ! array_key_exists($lid, $lot_lis)){
             $this->assign('message','该彩种正停运中，请选择其他彩种！');
            $this->assign('url','');
            return $this->fetch('./message');
        }
        $lottery = $lot_lis[$lid];
        $this->assign('codesum',$lottery['codesum']);
        $this->assign('lottery', $lottery);
        $this->assign('minRebateGaps', $lottery['min_rebate_gaps']);
        //2.得到全包奖金
        $this->assign('maxCombPrize', $lottery['zx_max_comb'] * 2);
        //3.得到所有玩组法列表及玩法列表和奖金列表
        $mgs = $this->memcache->get('user', 'mgs' . $user['u_username'] . $lid);
        if (empty($mgs)) {
            $mgs = forwarding('lotteryForwarding', '\app\Service\lottery\business\method_groups', 'getMethodGroupsByLid', ['lid' => $lid,'odd'=>strtolower($user['o_adds'])]);
            $this->memcache->set('user', 'mgs' . $user['u_username'] . $lid, $mgs, 60);
        }
        $this->assign('json_methods', $mgs);
        //4.得到当天已开奖奖期
        $issuelist = $this->memcache->get('user', 'issueslist' . $lid);
        if (empty($issuelist)) {
            $issuelist = json_decode(forwarding('lotteryForwarding', '\app\Service\lottery\business\issues', 'getIssueList', ['lid' => $lid, 'status_code' => 3]), true);
            $this->memcache->set('user', 'issueslist' . $lid, $issuelist, 5);
        }
        if(empty($issuelist['data'])){
            $issuelist['data'] =   [ [
                "issue_id" =>  "0000000000",
                "issue" => "0000000000",
                "code" =>"1,1,1,1,1"
            ]];
        }
        $this->assign('json_openedIssues', json_encode($issuelist['data']));
        //盘口
        $this->assign('odd',strtolower($user['o_adds']));
        //判断开奖动画 首次进入页面不进行开奖动画
        $this->assign('donghua',1);
        //动态更新加载
        $this->assign('v',"1111");
        return $this->fetch("./play");
    }

    /**
     * 下注前台
     *
     */
    public function buy()
    {
        $data =$this->request->post();
        $server = $this->request->server();
        $data['SERVER_ADDR'] = $server['SERVER_ADDR'];
        $data['REMOTE_ADDR'] = $server['REMOTE_ADDR'];
        $user = $this->user;
        $data['user'] = $user['user'];
        $res = json_decode(forwarding('lotteryForwarding', '\app\Service\order\business\play', 'Buy', $data), true);
        if($res['data']){
            return ['errno'=>0,'ordersums' =>$res['data']];
        }else{
            return ['errno'=>1,'errstr'=>$res['message']];
        }
    }

    /**
     * 投注记录
     */
    public function buyRecord(){
        $data['lid'] = $this->request->post('lotteryId');
        $data['lid'] = empty($data['lid'])?2:$data['lid'];
        $user = $this->user;
        $data['username'] = $user['u_username'];
        $data['user'] = $this->user;
        $orders = [];
        $res = json_decode(forwarding('lotteryForwarding', '\app\Service\order\business\play', 'getBuyRecord', $data), true);
        $result = array('errno' => 0, 'errstr' => '', 'prj' => $orders);
        if($res['data']){
            $result['prj'] = $res['data'];
        }
        return  $result;
    }

    /**
     * 追号记录
     */
    public function traceRecord(){
        $data['lid'] = $this->request->post('lotteryId');
        $data['lid'] = empty($data['lid'])?2:$data['lid'];
        $user = $this->user;
        $data['username'] = $user['u_username'];
        $orders = [];
        $res = json_decode(forwarding('lotteryForwarding', '\app\Service\order\business\play', 'getTraceRecord', $data), true);
        $result = array('errno' => 0, 'errstr' => '', 'prj' => $orders);
        if($res['data']){
            $result['prj'] = $res['data'];
        }
        return  $result;
    }
    /**
     * 追号
     */
    public function trace(){
        $data['lid'] = $this->request->post('lotteryId');
        $user = $this->user;
        //获取玩法id奖金
        $m_id = $this->request->post('mids');
        if(is_numeric($m_id)){
            $prize = json_decode(forwarding('lotteryForwarding', '\app\Service\lottery\business\prizes', 'getPrizeByOdd', ['m_id'=>$m_id,'odd'=>strtolower($user['o_adds'])]), true);
            $prize = $prize['data'][0]['jiner'];
        }else{
            $prize = 0;
        }
        $res = json_decode(forwarding('lotteryForwarding', '\app\Service\lottery\business\issues', 'getTraceIssue', $data), true);
        $this->view->assign('issues',$res['data']['tracelist']);
        $content = $this->view->fetch('./game_play_trace');
        return array('errno' => 0, 'errstr' => '', 'issues' => $res['data']['issuelist'], 'prize' => $prize, 'prizeLimit' => DS_PRIZE_LIMIT, 'content' =>$content );
    }

    /**
     * 追号下注
     */
    public function traceBuy(){
        $data =$this->request->post();
        $server = $this->request->server();
        $data['SERVER_ADDR'] = $server['SERVER_ADDR'];
        $data['REMOTE_ADDR'] = $server['REMOTE_ADDR'];
        $user = $this->user;
        $data['user'] = $user['user'];
        $res = json_decode(forwarding('lotteryForwarding', '\app\Service\order\business\play', 'Trace', $data), true);
        if($res['data']){
            return ['errno'=>0,'ordersums' =>$res['data']];
        }else{
            return ['errno'=>1,'errstr'=>$res['message']];
        }
    }
    /**
     * 订单详情
     */
    public  function orderDetail(){
        $data= $this->request->get();
        $user = $this->user;
        $data['user'] = $user;
        $data['username'] = $user['u_username'];
        $res =json_decode(forwarding('lotteryForwarding','\app\Service\order\business\play', 'orderDetail', $data),true);
        if(!$res['data']){
            $this->assign('message',$res['message']);
            $this->assign('url','');
            return $this->fetch('./message');
        }
        $this->assign('orderDetail',$res['data']);
        //动态更新加载
        $this->assign('v',time());
        return $this->fetch('./orderDetail');
    }
    /**
     * 获取追号订单详情
     */
    public function traceDetail(){
        $data= $this->request->get();
        $user = $this->user;
        $data['user'] = $user;
        $data['username'] = $user['u_username'];
        $res =json_decode(forwarding('lotteryForwarding','\app\Service\order\business\play', 'traceDetail', $data),true);
        if(!$res['data']){
            $this->assign('message',$res['message']);
            $this->assign('url','');
            return $this->fetch('./message');
        }
        $this->assign('traceDetail',$res['data']);
        //动态更新加载
        $this->assign('v',time());
        return $this->fetch('./traceDetail');
    }

    /**
     * 每期里面的注单详情
     * @return mixed
     */
    public function traceOrderDetail(){
        $data= $this->request->get();
        $user = $this->user;
        $data['username'] = $user['u_username'];
        $data['user'] = $user;
        $res =json_decode(forwarding('lotteryForwarding','\app\Service\order\business\play', 'getTraceOrderDetail', $data),true);
        if(!$res['data']){
            $this->assign('message',$res['message']);
            $this->assign('url','javascript:history.back();');
            return $this->fetch('./message');
        }
        $this->assign('list',$res['data']);
        //动态更新加载
        $this->assign('v',time());
        return $this->fetch('/traceOrderDetail');
    }
    /**
     * 追号撤单
     */
    public function cancelTrace(){
        $data = $this->request->post();
        $user = $this->user;
        $data['user'] = $user;
        $data['username'] = $user['u_username'];
        $res =json_decode(forwarding('lotteryForwarding','\app\Service\order\business\play', 'cancelTrace', $data),true);
        if($res['data']){
            $this->assign('message','追号撤单成功！');
            $this->assign('url','javascript:history.back();');
            return $this->fetch('./message');
        }else{
            $this->assign('message',$res['message']);
            $this->assign('url','javascript:history.back();');
            return $this->fetch('./message');
        }
    }

    /**
     * 更多购买记录
     * is_pay
     * 0 已结算
     * 1 未结算
     */
    public function moreBuyRecord(){
        $post = $this->request->get();
        $user = $this->user;
        $data['user'] = $user;
        $data['lid'] = empty($post['lid'])?2:$post['lid'];
        $data['username'] = $user['u_username'];
        $data['is_pay'] = empty($post['is_pay'])?0:1;
        $data['start_time'] = empty($post['start_time'])?date('Y-m-d'):$post['start_time'];
        $data['end_time'] = empty($post['end_time'])?date('Y-m-d 23:59:59'):$post['end_time'];
        $data['wrap_id'] = empty($post['wrap_id'])?'':$post['wrap_id'];
        $data['page'] = empty($post['curPage'])?0:$post['curPage'];
        $res =json_decode(forwarding('lotteryForwarding','\app\Service\order\business\play', 'moreBuyRecord', $data),true);
        if(!$res['data']){
            $this->assign('message',$res['message']);
            $this->assign('url','javascript:history.back();');
            return $this->fetch('./message');
        }
        $this->assign('start_time',$data['start_time']);
        $this->assign('end_time',date("Y-m-d ",strtotime($data['end_time'])));
        $this->assign('list',$res['data']['list']);
        $this->assign('lid',$data['lid']);
        $this->assign('amount',$res['data']['amount']);
        $this->assign('page',$res['data']['page']);
        $this->assign('is_pay', $data['is_pay']);
        $this->assign('wrap_id',$res['data']['wrap_id']);
        return $this->fetch('./moreBuyRecord');
    }
    /**
     * 更多追号记录
     */
    public function moreTraceRecord(){
        $post = $this->request->get();
        $user = $this->user;
        $data['user'] = $user;
        $data['lid'] = empty($post['lid'])?2:$post['lid'];
        $data['username'] = $user['u_username'];
        $data['start_time'] = empty($post['start_time'])?date('Y-m-d'):$post['start_time'];
        $data['end_time'] = empty($post['end_time'])?date('Y-m-d 23:59:59'):$post['end_time'];
        $data['wrap_id'] = empty($post['wrap_id'])?'':$post['wrap_id'];
        $data['page'] = empty($post['curPage'])?0:$post['curPage'];
        $res =json_decode(forwarding('lotteryForwarding','\app\Service\order\business\play', 'moreTraceRecord', $data),true);
        if(!$res['data']){
            $this->assign('message',$res['message']);
            $this->assign('url','');
            return $this->fetch('./message');
        }
        $this->assign('start_time',$data['start_time']);
        $this->assign('end_time',date("Y-m-d ",strtotime($data['end_time'])));
        $this->assign('list',$res['data']['list']);
        $this->assign('lid',$data['lid']);
        $this->assign('amount',$res['data']['amount']);
        $this->assign('page',$res['data']['page']);
        $this->assign('wrap_id',$res['data']['wrap_id']);
        return  $this->fetch('./moreTraceRecord');
    }
    /**
     * 获取当前期
     */
    public function getCurIssue()
    {
        $lid = $this->request->post('lotteryId');
        $curIssue = $this->memcache->get('pc'.$lid,'curIssue');
        if(empty($curIssue)){
            $curIssue = json_decode(forwarding('lotteryForwarding', '\app\Service\lottery\business\issues', 'getCurrentIssue', ['lid' => $lid]), true);
            $this->memcache->set('pc'.$lid,'curIssue',$curIssue,1);
        }
        if (!empty($curIssue['data']['issueInfo'])) {
            $result = array('errno' => 0, 'errstr' => '', 'issueInfo' =>  $curIssue['data']['issueInfo'], 'lastIssueInfo' => $curIssue['data']['lastIssueInfo'], 'serverTime' => date('Y/m/d H:i:s'));
        } else {
            $result = array('errno' => 2, 'errstr' => '当前彩种处于封盘状态');
        }
        return $result;
    }

    /**
     * 获取全部指定彩种当前奖期
     */
    public function getAllCurIssue(){
        $lids = $this->request->post('lids');
        $curentLid = $this->request->post('curentLid');
        $curIssue = $this->memcache->get('getCurrentIssue'.$lids,'current');
        if(empty($curIssue)){
            $curIssue = json_decode(forwarding('lotteryForwarding', '\app\Service\lottery\business\issues', 'getAllCurrentIssue', ['lids' => rtrim($lids,',')]), true);
            $this->memcache->set('getCurrentIssue'.$lids,'current',$curIssue,1);
        }
        if($curIssue['data']){
            $arr =  array('errno' => 0, 'errstr' => '','issueInfo'=>$curIssue['data'], 'serverTime' => date('Y/m/d H:i:s'));
        }else{
            $arr =  array('errno' => 2, 'errstr' => '当前彩种处于封盘状态');
        }
        //当前彩种奖期
        $curIssueLast = $this->memcache->get('pcall'.$curentLid,'curIssue');
        if(empty($curIssueLast)){
            $curIssueLast = json_decode(forwarding('lotteryForwarding', '\app\Service\lottery\business\issues', 'getCurrentIssue', ['lid' => $curentLid]), true);
            $this->memcache->set('pcall'.$curentLid,'curIssue',$curIssueLast,1);
        }
        if($curIssueLast['data']){
            $arr['curIssue'] =  $curIssueLast['data'];
        }else{
            $arr['curIssue'] =  '-1';
        }
        return $arr;
    }
    /**
     *得到上一期的开奖结果
     */
    public function getLastIssueCode()
    {
        $lid = $this->request->post('lotteryId');
        $last = $this->memcache->get('getlastissuecode'.$lid,'last');
        if(empty($last)){
            $last = json_decode(forwarding('lotteryForwarding', '\app\Service\lottery\business\issues', 'lastIssueInfo', ['lid' => $lid]), true);
            $this->memcache->set('getlastissuecode'.$lid,'last',$last,3);
        }
        if(!empty($last['data'])){
            $result = array('errno' => 0, 'errstr' => '', 'issueInfo' =>['issue'=> $last['data']['issue'], 'code' => $last['data']['code']]);
        }else{
            $result = array('errno' => 1, 'errstr' => '当前彩种处于封盘中...', '');
        }
        return $result;
    }

    /**
     * 获取公告
     * @return mixed
     */
    public function getNotice()
    {
        $list = $this->memcache->get('pcNotices','list');
        if(empty($list)){
            $list = json_decode(forwarding('lotteryForwarding', '\app\Service\notices\business\notices', 'getNoticeOne', []), true);
            $this->memcache->set('pcNotices','list',$list,10);
        }
        return $list['data'];
    }

    /**
     * 公告列表
     */
    public function getNoticeList(){
        $list = $this->memcache->get('pc','noticesList');
        if(empty($list)){
            $list = json_decode(forwarding('lotteryForwarding', '\app\Service\notices\business\notices', 'getNoticeList', []), true);
            $this->memcache->set('pcNoticesList','list',$list,10);
        }
//        dump($list);
        $this->assign('list',$list['data']);
        return  $this->fetch('./notices');
    }
    /**
     * 公告详情
     */
    public function getNoticeDetail(){
        $id = $this->request->get('n_id');
        $detail = $this->memcache->get('pc','noticeDetail');
        if(empty($detail)){
            $detail = json_decode(forwarding('lotteryForwarding', '\app\Service\notices\business\notices', 'getNoticeDetail', ['n_id'=>$id]), true);
            $this->memcache->set('pcNoticesList','list',$detail,10);
        }
        if(empty($detail['data'])){
            $this->assign('message',$detail['message']);
            $this->assign('url','javascript:window.close()');
            return $this->fetch('./message');
        }
        $this->assign('detail',$detail['data']);
        return  $this->fetch('./noticeDetail');
    }
    /**
     * 用户金额
     * @return int
     */
    public function showBalance()
    {
        $user =$this->user;
        if(empty($user['u_username'])){
            return -1;
        }
        $ip = $this->request->ip();
        $res = json_decode(forwarding('lotteryForwarding', '\app\Service\users\business\frontUsers', 'tongjizaixian', ['username'=>$user['u_username'],'ip'=>$ip]),true);//判断用户登录session_id用户互踢
        if($res['data']){
            return  -2;
        }
        $list = json_decode(forwarding('lotteryForwarding', '\app\Service\DS\business\wallet', 'getBalance', ['username'=>unwrapUsername($user['u_username']),'siteId'=>$user['u_site_id']]), true);
        if($list['data']){
            $result['balance'] = number_format(round($list['data'],2), 2);
            return $result;
        }else{
            return '';
        }
    }


}